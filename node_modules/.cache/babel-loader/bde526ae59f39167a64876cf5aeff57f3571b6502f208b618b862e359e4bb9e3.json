{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\cursor proj\\\\my-typing\\\\src\\\\components\\\\TypingArea.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport './TypingArea.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingArea = ({\n  currentText,\n  userInput,\n  onInputChange,\n  isCompleted\n}) => {\n  _s();\n  const inputRef = useRef(null);\n  useEffect(() => {\n    if (inputRef.current && !isCompleted) {\n      inputRef.current.focus();\n    }\n  }, [isCompleted]);\n  const renderText = () => {\n    return currentText.split('').map((char, index) => {\n      let className = 'char';\n      if (index < userInput.length) {\n        if (userInput[index] === char) {\n          className += ' correct';\n        } else {\n          className += ' incorrect';\n        }\n      } else if (index === userInput.length) {\n        className += ' current';\n      }\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: className,\n        children: char\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"typing-area\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-display\",\n      children: renderText()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: inputRef,\n        value: userInput,\n        onChange: e => onInputChange(e.target.value),\n        placeholder: \"Start typing here...\",\n        disabled: isCompleted,\n        className: \"typing-input\",\n        rows: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), isCompleted && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"completion-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"completion-icon\",\n          children: \"\\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), \"Test completed! Click \\\"New Test\\\" to try again.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(TypingArea, \"cBQ6FQ+sf5H+lvNONLKqtm4aeQ8=\");\n_c = TypingArea;\nexport default TypingArea;\nvar _c;\n$RefreshReg$(_c, \"TypingArea\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","TypingArea","currentText","userInput","onInputChange","isCompleted","_s","inputRef","current","focus","renderText","split","map","char","index","className","length","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","value","onChange","e","target","placeholder","disabled","rows","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/cursor proj/my-typing/src/components/TypingArea.tsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport './TypingArea.css';\r\n\r\ninterface TypingAreaProps {\r\n  currentText: string;\r\n  userInput: string;\r\n  onInputChange: (value: string) => void;\r\n  isCompleted: boolean;\r\n}\r\n\r\nconst TypingArea: React.FC<TypingAreaProps> = ({\r\n  currentText,\r\n  userInput,\r\n  onInputChange,\r\n  isCompleted\r\n}) => {\r\n  const inputRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (inputRef.current && !isCompleted) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [isCompleted]);\r\n\r\n  const renderText = () => {\r\n    return currentText.split('').map((char, index) => {\r\n      let className = 'char';\r\n      \r\n      if (index < userInput.length) {\r\n        if (userInput[index] === char) {\r\n          className += ' correct';\r\n        } else {\r\n          className += ' incorrect';\r\n        }\r\n      } else if (index === userInput.length) {\r\n        className += ' current';\r\n      }\r\n      \r\n      return (\r\n        <span key={index} className={className}>\r\n          {char}\r\n        </span>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"typing-area\">\r\n      <div className=\"text-display\">\r\n        {renderText()}\r\n      </div>\r\n      \r\n      <div className=\"input-container\">\r\n        <textarea\r\n          ref={inputRef}\r\n          value={userInput}\r\n          onChange={(e) => onInputChange(e.target.value)}\r\n          placeholder=\"Start typing here...\"\r\n          disabled={isCompleted}\r\n          className=\"typing-input\"\r\n          rows={3}\r\n        />\r\n        \r\n        {isCompleted && (\r\n          <div className=\"completion-message\">\r\n            <span className=\"completion-icon\">ðŸŽ‰</span>\r\n            Test completed! Click \"New Test\" to try again.\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TypingArea; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS1B,MAAMC,UAAqC,GAAGA,CAAC;EAC7CC,WAAW;EACXC,SAAS;EACTC,aAAa;EACbC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,QAAQ,GAAGV,MAAM,CAAsB,IAAI,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,IAAIS,QAAQ,CAACC,OAAO,IAAI,CAACH,WAAW,EAAE;MACpCE,QAAQ,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC;IAC1B;EACF,CAAC,EAAE,CAACJ,WAAW,CAAC,CAAC;EAEjB,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACvB,OAAOR,WAAW,CAACS,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAChD,IAAIC,SAAS,GAAG,MAAM;MAEtB,IAAID,KAAK,GAAGX,SAAS,CAACa,MAAM,EAAE;QAC5B,IAAIb,SAAS,CAACW,KAAK,CAAC,KAAKD,IAAI,EAAE;UAC7BE,SAAS,IAAI,UAAU;QACzB,CAAC,MAAM;UACLA,SAAS,IAAI,YAAY;QAC3B;MACF,CAAC,MAAM,IAAID,KAAK,KAAKX,SAAS,CAACa,MAAM,EAAE;QACrCD,SAAS,IAAI,UAAU;MACzB;MAEA,oBACEf,OAAA;QAAkBe,SAAS,EAAEA,SAAU;QAAAE,QAAA,EACpCJ;MAAI,GADIC,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CAAC;IAEX,CAAC,CAAC;EACJ,CAAC;EAED,oBACErB,OAAA;IAAKe,SAAS,EAAC,aAAa;IAAAE,QAAA,gBAC1BjB,OAAA;MAAKe,SAAS,EAAC,cAAc;MAAAE,QAAA,EAC1BP,UAAU,CAAC;IAAC;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAENrB,OAAA;MAAKe,SAAS,EAAC,iBAAiB;MAAAE,QAAA,gBAC9BjB,OAAA;QACEsB,GAAG,EAAEf,QAAS;QACdgB,KAAK,EAAEpB,SAAU;QACjBqB,QAAQ,EAAGC,CAAC,IAAKrB,aAAa,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/CI,WAAW,EAAC,sBAAsB;QAClCC,QAAQ,EAAEvB,WAAY;QACtBU,SAAS,EAAC,cAAc;QACxBc,IAAI,EAAE;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,EAEDhB,WAAW,iBACVL,OAAA;QAAKe,SAAS,EAAC,oBAAoB;QAAAE,QAAA,gBACjCjB,OAAA;UAAMe,SAAS,EAAC,iBAAiB;UAAAE,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,oDAE7C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CA9DIL,UAAqC;AAAA6B,EAAA,GAArC7B,UAAqC;AAgE3C,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}